---
layout: layout.liquid
pagination: 
  data: actions
  size: 1
  alias: action
permalink: "action/{{ action.From + action.Name | slug }}/"
---

<section id="about" class="about-us section">
  <div class="container">
    <div class="row">
      <div class="col-12">
        <div class="section-title">
          <h1>[{{ action.From | actionYear }}] - {{ action.Name }}</h1>
          <p>{{ action.About }}<p>
        </div>
      </div>
    </div>
    <hr />
    <div class="row">
      <ul class="nav nav-tabs nav-fill">
        <li class="nav-item">
          <a class="nav-link active" id="information-tab" data-toggle="tab" href="#information" role="tab" aria-controls="information" aria-selected="true">Informace</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="news-tab" data-toggle="tab" href="#news" role="tab" aria-controls="news" aria-selected="false">Aktuality</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="propositions-tab" data-toggle="tab" href="#propositions" role="tab" aria-controls="propositions" aria-selected="false">Propozice</a>
        </li>
        <li class="nav-item">
          {%- if action.IsEnteringOpened == "1" -%}
            <a class="nav-link" id="applying-tab" data-toggle="tab" href="#applying" role="tab" aria-controls="applying" aria-selected="false">Přihláška</a>
          {%- else -%}
            <a class="nav-link disabled" id="applying-tab" data-toggle="tab" href="#applying" role="tab" aria-controls="applying" aria-selected="false">Přihláška</a>
          {%- endif -%}
        </li>
        <li class="nav-item">
            {%- if action.IsEnteringOpened >= "1" -%} {# 1 - is used local entering form, 2 - is administered by system and is used external/custom entering form #}
              <a class="nav-link" id="entered-tab" data-toggle="tab" href="#entered" role="tab" aria-controls="entered" aria-selected="false">Přihlášení</a>
            {%- else -%}
              <a class="nav-link disabled" id="entered-tab" data-toggle="tab" href="#entered" role="tab" aria-controls="entered" aria-selected="false">Přihlášení</a>
            {%- endif -%}
        </li>
        <li class="nav-item">
          <a class="nav-link" id="results-tab" data-toggle="tab" href="#results" role="tab" aria-controls="results" aria-selected="false">Výsledky</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="stats-tab" data-toggle="tab" href="#statistics" role="tab" aria-controls="statistics" aria-selected="false">Statistiky</a>
        </li>
      </ul>
    </div>

    {# =*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* #}

    <div class="tab-content">
      {# Informations #}
      <div class="tab-pane active" id="information" role="tabpanel" aria-labelledby="information-tab">
        <h4>Informace</h4>
        <hr />
        <div class="container">
          <div class="row">
            <div class="col-6">
              Domovské stránky:
            </div>
            <div class="col-6">
              <a target="_blank" href="{{ action.Url }}">{{ action.Url }}</a>
            </div>
          </div>
          <div class="row">
            <div class="col-6">
              Od - Do:
            </div>
            <div class="col-6">
               {{ action.From | actionDateNoYear }} - {{ action.To | actionDateNoYear }} {{ action.From | actionYear }}
            </div>
          </div>
          <div class="row">
            <div class="col-6">
              Kde:
            </div>
            <div class="col-6">
              {{ action.Where }}
            </div>
          </div>
          <div class="row">
            <div class="col-6">
              Pozice:
            </div>
            <div class="col-6">
              {{ action.Latitude }}N, {{ action.Longitude }}E
            </div>
          </div>
          <div class="row">
            <div class="col-6">
              Přihlašování:
            </div>
            <div class="col-6">
              {%- if action.CustomApplyLink == "#" -%}
                <a href="#applying" onclick="setActiveToApplying()">Zde</a>
              {%- elif action.CustomApplyLink != "" -%}
                <a href="{{ action.CustomApplyLink }}">Zde</a>
              {%- else -%}
                Neuvedeno, vlastní na domovských stránkách - <a href="{{ action.Url }}">{{ action.Url }}</a>
              {%- endif -%}
            </div>
          </div>
          <div class="row">
            <div class="col-2">
              Vypsané závody:
            </div>
            <div class="col-10">
              <div class="container">
                {%- for race in action.Races -%}
                  <div class="row">
                    {%- if race.SerieType == 'MCR_DT' -%}
                      <div class="col color-mcr-dt">
                        <div class="container">
                          <div class="row">
                            <div class="col">
                              {{ race.Name }} [{{ race.Distance }}][{{ race.Elevation }}], součástí seriálu MČR Dogtrekking
                            </div>
                            <div class="col">
                              Vypsané kategorie: 
                                {%- for category in race.Categories -%}
                                  <span class="badge badge-secondary">{{ category.Name }}</span>
                                {%- endfor -%}
                            </div>
                          </div>
                        </div>
                      </div>
                    {%- elif race.SerieType == 'MCR_DM' -%}
                      <div class="col color-mcr-dm">
                        <div class="container">
                          <div class="row">
                            <div class="col">
                              {{ race.Name }} [{{ race.Distance }}][{{ race.Elevation }}], součástí seriálu MČR Dogmaraton
                            </div>
                            <div class="col">
                              Vypsané kategorie:
                                {%- for category in race.Categories -%}
                                  <span class="badge badge-secondary">{{ category.Name }}</span>
                                {%- endfor -%}
                            </div>
                          </div>
                        </div>
                      </div>
                    {%- else -%}
                      <div class="col color-other">
                        <div class="container">
                          <div class="row">
                            <div class="col">
                              {{ race.Name }} [{{ race.Distance }}][{{ race.Elevation }}]
                            </div>
                            <div class="col">
                              Vypsané kategorie:
                                  {%- for category in race.Categories -%}
                                    <span class="badge badge-secondary">{{ category.Name }}</span>
                                  {%- endfor -%}
                            </div>
                          </div>
                        </div>
                      </div>
                    {%- endif -%}
                  </div>
                {%- endfor -%}
              </div>
            </div>
          </div>
          {%- if action.Latitude > 0.0 -%}
          <div class="row">
            <div class="col-12">
              <div id="mapid"></div>
            </div>
          </div>
		      {%- endif -%}
        </div>
      </div>

      {# News #}
      <div class="tab-pane" id="news" role="tabpanel" aria-labelledby="news-tab">
        <h4>Aktuality</h4>
        <hr />
        <ul>
        {%- for news in actionNews.actionNews | sortedNews -%}
          {%- if news.id_action == action.Id -%}
            <li>{{ news.created }}: {{ news.text | safe }}</li>
          {%- endif -%}
        {%- endfor -%}
        </ul>
      </div>
      
      {# Propositions #}
      <div class="tab-pane" id="propositions" role="tabpanel" aria-labelledby="propositions-tab">
        <h4>Propozice</h4>
        <hr />
        <div class="container">
          <div class="row">
            <div class="col">
              Umístěné na webových stránkách závodu - <a href="{{ action.Url }}">{{ action.Url }}</a>
            </div>
          </div>
        </div>
      </div>
      
      {# Applying #}
      <div class="tab-pane" id="applying" role="tabpanel" aria-labelledby="applying-tab">
        <h4>Přihláška</h4>
        <hr />
        <div class="container">
          <form>
            <div class="row">
              <div class="col-2">
                <h6>Závod</h6>
              </div>
              <div class="col-10">
                <select id="raceRaces" onchange="racesChanged()">
                  <option value="0">--== VYBER ZÁVOD ==--</option>
                  {%- for race in action.Races -%}
                    <option value={{ race.Id }}>{{ race.Name }} [{{ race.Distance }}km][{{ race.Elevation }}m]</option>
                  {%- endfor -%}
                </select>
              </div>
            </div>
            <div class="row">
              <div class="col-2">
                <h6>Kategorie</h6>
              </div>
              <div class="col-10">
                <select id="raceCategories">
                  <option value="0">--== Nejdříve vyber závod ==--</option>
                </select>
              </div>
            </div>
            <hr />
            <div class="row">
              <div class="col-12 col-lg-2">
                <h6>Kontaktní údaje</h6>
              </div>
              <div class="col-12 col-lg-5">
                <label for="fname">Jméno:</label>
                <input type="text" autocomplete="given-name" id="fname" />
              </div>
              <div class="col-12 col-lg-5">
                <label for="lname">Příjmení:</label>
                <input type="text" autocomplete="family-name" id="lname" />
              </div>
            </div>
            <div class="row">
              <div class="col-12 col-lg-2">
              </div>
              <div class="col-12 col-lg-5">
                <label for="phone">Telefon</label>
                <input type="tel" autocomplete="tel" id="phone" />
              </div>
              <div class="col-12 col-lg-5">
                <label for="mail">E-Mail</label>
                <input type="mail" autocomplete="email" id="mail" />
              </div>
            </div>
            <div class="row">
              <div class="col-12 col-lg-2">
              </div>
              <div class="col-12 col-lg-5">
                <label for="address">Adresa</label>
                <input type="text" autocomplete="street-address" id="address" />
              </div>
              <div class="col-12 col-lg-5">
                <label for="city">Město</label>
                <input type="text" autocomplete="address-level2" id="city" />
              </div>
            </div>
            <hr />
            <div class="row">
              <div class="col-12 col-lg-2">
                <h6>Datum narození</h6>
              </div>
              <div class="col-12 col-lg-10">
                <div class="container">
                  <div class="row">
                    <div class="col-4">
                      <label for="bday">Den</label>
                      <input type="number" min="1" max="31" value="1" autocomplete="bday-day" id="bday" />
                    </div>
                    <div class="col-4">
                      <label for="bmonth">Měsíc</label>
                      <input type="number" min="1" max="12" value="1" autocomplete="bday-month" id="bmonth" />
                    </div>
                    <div class="col-4">
                      <label for="byear">Rok</label>
                      <input type="number" min="1922" max="2022" value="2000" autocomplete="bday-year" id="byear" />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <hr />
            <div class="row">
              <div class="col-12 col-lg-2">
                <h6>Psi</h6>
              </div>
              <div class="col-12 col-lg-10">
                <div class="container">
                  <div class="row">
                    <div class="col-4">
                      <label for="dog_name">Jméno psa</label>
                      <input type="text" id="dog_name" />
                    </div>
                    <div class="col-4">
                      <label for="dog_pedigree">Plemeno</label>
                      <input type="text" id="dog_pedigree" />
                    </div>
                    <div class="col-4">
                      <label for="dog_chip">Číslo čipu</label>
                      <input type="text" id="dog_chip" />
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-12 col-lg-8">
                    </div>
                    <div class="col-12 col-lg-4">
                      <button type="button" class="btn btn-secondary" onclick="AddDog()">Přidej psa</button>
                    </div>
                  </div>
                  <hr />
                  <div class="row">
                    <div class="col">
                      <b><i>Evidovaní psi</i></b>
                      <table id="EntryRegistratedDogs">
                        <thead>
                          <tr>
                            <th>Čip</th><th>Jméno</th><th>Plemeno</th>
                          </tr>
                        </thead>
                        <tbody>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <hr />
            <div class="row">
              <div class="col-12 col-lg-2">
                <h6>Výběr jídla</h6>
              </div>
              <div class="col-12 col-lg-10">
                <div class="container">
                  <table>
                    <thead>
                    <tr>
                      <th>Den</th><th>Jídlo</th><th>Cena</th><th>Počet</th>
                    </tr>
                    </thead>
                    <tbody>
                      {%- for food in action.FoodsSelection | orderByDayPart -%}
                        <tr>
                          <td>{{ food.day_part | translateDayPart }}</td>
                          <td>{{ food.food }}</td>
                          <td>{{ food.price | handleZeroPriceInPlace }}</td>
                          <td><input type="number" 
                                     value="0" 
                                     min="0" 
                                     onchange="foodOrderUpdated({{ action.Id }}, {{ food.id }}, {{ food.price }}, this.value)" /></td>
                        </tr>
                      {%- endfor -%}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
            <hr />
            <div class="row">
              <div class="col-12 col-lg-9">
              </div>
              <div class="col-12 col-lg-3">
                <button type="button" class="btn btn-primary" onclick="sendEntryRegistration()">Odeslat</button>
              </div>
            </div>
          </form>
        </div>
      </div>

      {# Entered #}
      <div class="tab-pane" id="entered" role="tabpanel" aria-labelledby="entered-tab">
        <h4>Přihlášení</h4>
        <hr />
        <div class="container">
          <div class="row">
            <div class="col">
              <table class="sortedTable-500 add-margin-bottom">
                <thead>
                  <tr>
                    <th>Příjmení, jméno</th>
                    <th>Závod</th>
                    <th>Kategorie</th>
                    <th>Psi</th>
                    <th>Zaplaceno</th>
                  </tr>
                </thead>
                <tbody>
                  {%- for entry in action.Entries -%}
                    <tr>
                      <td>{{ entry.surname }}, {{ entry.name }}</td>
                      <td>{{ entry.race_name }}</td>
                      <td>{{ entry.category_name }}</td>
                      <td>
                        <ul>
                        {%- for dog in entry.dogs -%}
                          <li>{{ dog.name }} [{{ dog.pedigree }}]</li>
                        {%- endfor -%}
                        </ul>
                      </td>
                      <td>{{ entry.paied | translatePayment }}</td>
                    </tr>
                  {%- endfor -%}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      {# Results #}
      <div class="tab-pane" id="results" role="tabpanel" aria-labelledby="results-tab">
        <h4>Výsledky</h4>
        <hr />
        <div class="container">
        {%- for race in action.Races -%}
          <div class="row">
          {%- for category in race.Categories -%}
            <div class="col-lg-6 col-12">
            {%- if race.SerieType == 'MCR_DT' -%}
              <h4><div class="color-mcr-dt">{{ race.Name }} - {{ category.Name }}</div></h4>
            {%- elif race.SerieType == 'MCR_DM' -%}
              <h4><div class="color-mcr-dm">{{ race.Name }} - {{ category.Name }}</div></h4>
            {%- else -%}
              <h4><div class="color-other">{{ race.Name }} - {{ category.Name }}</div></h4>
            {%- endif -%}
              <table class="sortedTable add-margin-bottom" id="{{ race.Name + category.Name | slug }}">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Příjmení, jméno</th>
                    <th>Start</th>
                    <th>Cíl</th>
                    <th>Čas</th>
                  </tr>
                </thead>
                <tbody>
                {%- for raceResults in action.Results.Races -%}
                 {%- for categoryResults in raceResults.Categories -%}
                  {%- if raceResults.Name == race.Name -%}
                   {%- if categoryResults.Name == category.Name -%}
                    {%- for competitor in categoryResults.Competitors -%}
                      <tr>
                      {%- if competitor.Order == 0 -%}
                        <td data-order="99999999"></td>
                      {%- else -%}
                        <td data-order="{{ competitor.Order }}">{{ competitor.Order }}</td>
                      {%- endif -%}
                        <td data-order="{{ competitor.Surname }}, {{ competitor.Name }}">
                          <a href="/Zavodnik/{{ competitor.Id }}/index.html">{{ competitor.Surname }}, {{ competitor.Name }}</a>
                        </td>
                        <td data-order="{{ competitor.Start }}">{{ competitor.Start | wdTime }}</td>
                        <td data-order="{{ competitor.Finish }}">{{ competitor.Finish | wdTime }}</td>
                        <td data-order="{{ competitor.Time }}">{{ competitor.Time | simpleTime }}</td>
                      </tr>
                    {%- endfor -%} <!-- competitor -->
                   {%- endif -%} <!-- category.Name -->
                  {%- endif -%} <!-- result.Name -->
                 {%- endfor -%} <!-- catogory -->
                {%- endfor -%} <!-- race -->
                </tbody>
              </table>
            </div>
          {%- endfor -%} {# Category #}
          </div>
        {%- endfor -%} {# race #}
        </div> {# container #}
      </div>


            {# Results #}
      <div class="tab-pane" id="statistics" role="tabpanel" aria-labelledby="stats-tab">
        <h4>Statistiky</h4>
        <hr />
        <div class="container">

          {%- for race in action.Races -%} {#| filterOnlyStartedRaces -%} #}
          <div class="row">
            <div class="col">
              <canvas id="statsRacingStatePerRace_{{ race.Id }}"></canvas>
            </div>
          </div>
          {%- endfor -%}

          <div class="row">
            <div class="col">
              <canvas id="statsEnteringSumPerRace"></canvas>
            </div>
          </div>
          <div class="row">
            <div class="col">
              <canvas id="statsEnteringPerRaceDay"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<a href="/Terminovka/{{ action.From | firstFour }}/">Zpět na všechny akce</a>

<script>
  var preparingEntryDogs = [];
  {# 
    let dogSample = {
      chip = "987654321",
      name = "adolfek",
      pedigree = "Čistokrevný smrad jeden kousavý"
    }; 
  #}
  
  var preparingEntryFood = [];
  {# 
    let foodSample = {
        id = 51,
        price = 0,
        count = 2,
    }; 
  #}

  var preparingEntryTShirts = [];
  {# 
    let tshirtSample = {
      id_type: 0,
      size: "L",
      color: "red",
      count: 10
    }; 
  #}


  var mapmargin = 50;
  let height = 0;

  function resize() {
    if(window.innerWidth >= 980) {
      height = window.innerHeight - mapmargin; 
      document.getElementById('mapid').style.marginTop = 50;
    }
    else {
      height = window.innerHeight - (mapmargin+12);
      document.getElementById('mapid').style.marginTop = -21;
    }

    document.getElementById('mapid').style.height = "" + height / 2 + "px";
	  document.getElementById('mapid').style.width = "" + height / 6 * 3 + "px";
  }

  window.onresize = resize;

  resize();
  
  
  var mymap = L.map('mapid').setView([{{ action.Latitude }}, {{ action.Longitude }}], 11);
  var marker = L.marker([{{ action.Latitude }} , {{ action.Longitude }}], { title: "Zde" }).addTo(mymap);
  L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
    maxZoom: 18,
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
                 'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    id: 'mapbox/streets-v11',
    tileSize: 512,
    zoomOffset: -1
  }).addTo(mymap);

  function foodOrderUpdated(idAction, idFood, price, count) {
    let updatedFood = preparingEntryFood.find(x => x.id === idFood);
    
    if (typeof(updatedFood) !== "undefined" && updatedFood !== null)
      updatedFood.count = count;
    else
      preparingEntryFood.push({ id: idFood, price: price, count: count });
  }

  function AddDog() {
    let chipEle = document.getElementById("dog_chip");
    let nameEle = document.getElementById("dog_name");
    let pedigreeEle = document.getElementById("dog_pedigree");
    let tableEle = document.getElementById("EntryRegistratedDogs");

    if (nameEle.value !== "") // do not add dog with no name
        preparingEntryDogs.push({ name: nameEle.value, chip: chipEle.value, pedigree: pedigreeEle.value });


    let row = tableEle.insertRow(-1);


    let cell = row.insertCell(-1);
    cell.innerText = chipEle.value;

    cell = row.insertCell(-1);
    cell.innerText = nameEle.value;

    cell = row.insertCell(-1);
    cell.innerText = pedigreeEle.value;


    chipEle.value = "";
    nameEle.value = "";
    pedigreeEle.value = "";
  }

  function racesChanged() {
    var value = document.getElementById("raceRaces").value;
    var categoriesSelect = document.getElementById("raceCategories");

    let races = [];
    {%- for race in action.Races -%}
    {
      let race = {};
      race.Id = "{{ race.Id }}";
      race.Name = "{{ race.Name }}";
      
      race.Categories = [];

      {%- for catg in race.Categories -%}
        {
          let category = {};

          category.Id = "{{ catg.Id }}";
          category.Name = "{{ catg.Name }}";

          race.Categories.push(category);
        }
      {%- endfor -%}

      races.push(race);
    }
    {%- endfor -%}

    races.forEach(race => {
      if (race.Id == value) {
        var str = ""
  
        for (let i = 0; i < race.Categories.length; i++) {
          str += "<option value='" + race.Categories[i].Id + "'>" + race.Categories[i].Name + "</option>"
        }
        categoriesSelect.innerHTML = str;
        $('#raceCategories').niceSelect('update');
      }
    });
  };

  function dateToYMD(date) {
    var d = date.getDate();
    var m = date.getMonth() + 1; //Month from 0 to 11
    var y = date.getFullYear();

    return '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);
  }

  function sendEntryRegistration() {
    AddDog(); // to be sure that in case user did not pressed the AddDog - add them.

    let bday = document.getElementById("bday").value;
    let bmonth = document.getElementById("bmonth").value;
    let byear = document.getElementById("byear").value;
    let birthday = '' + byear + '-' + (bmonth<=9 ? '0' + bmonth : bmonth) + '-' + (bday <= 9 ? '0' + bday : bday);

    let entry = {
      action_id: {{ action.Id }},
      race_id: document.getElementById("raceRaces").value,
      category_id: document.getElementById("raceCategories").value,
      name: document.getElementById("fname").value,
      surname: document.getElementById("lname").value,
      phone: document.getElementById("phone").value,
      email: document.getElementById("mail").value,
      birthday: birthday,
      street: document.getElementById("address").value,
      city: document.getElementById("city").value,
      about: document.getElementById("about").value,
      dogs: preparingEntryDogs,
      tshirts: preparingEntryTShirts,
      foods: preparingEntryFood
    };

    let obj = {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Host': 'www.dogtrekking.cz',
        'Origin': 'localhost'
      },
      body: JSON.stringify(entry)
    };

    fetch(`https://rest.dogtrekking.cz/entries/add`, obj)
    .then(response => response.json())
    .then(json => {
      if (typeof(json.entry_id) !== "undefined" && json.entry_id !== null && json.entry_id > 0) {
        alert("OK, přihláška prošla, za chvíli by Ti měl přijít mail o registraci. Pokud nedojde, prosím, kontaktuj nás");
        window.location.reload();
      }
      else {
        alert("Přihláška nebyla přijata, prosíme, ještě jednou zkontroluj, zda jsi vše vyplnil(a) správně, pokud jsi si jist(a), prosím, kontaktuj nás");
      }
    });
  }

  function setActiveToApplying() {
    $('.nav-tabs a[href="#applying"]').tab('show');
  }

  function enteredListOnChange(selectedRace) {
    console.log(selectedRace.value);
  }


  var hash = window.location.hash.substr(1);
  console.log(hash);
  if (hash === "applying") {
    setActiveToApplying();
  }

  /* statistics */
  let statsLabelsEntering = [];
  let statsDatasetEnteringPerRaceDay = [];
  let statsDatasetEnteringSumPerRace = [];


  let entries = [];
  let dayFormatList = [];
  {%- for entry in action.Entries -%}
    entries.push({
      entered_date: "{{ entry.entered_date }}",
      id_race: {{ entry.id_race }}
    });
  {%- endfor -%}

  let sortedEntries = entries.sort((a, b) => {
    let aT = moment(a.entered_date, "YYYY-MM-DD");
    let bT = moment(b.entered_date, "YYYY-MM-DD");

    if (aT.entered_date > bT.entered_date)
        return 1;

    if (aT.entered_date < bT.entered_date)
        return -1;

    return 0;
  });

  sortedEntries.forEach(entry => {
    let dayFormat = moment(entry.entered_date, "YYYY-MM-DD").format("YYYY-MM-DD");
    let day = moment(entry.entered_date, "YYYY-MM-DD").format("DD.MM");
            
    if (statsLabelsEntering.filter(label => label === day).length <= 0) {
      statsLabelsEntering.push(day);
      dayFormatList.push(dayFormat);
    }
  });
  
  let races = [];
  {%- for race in action.Races -%}
  {
    races.push({
      id: {{ race.Id }},
      name: "{{ race.Name }}"
    });
  }
  {%- endfor -%}

  let possibleColors = [];
  {%- for color in colors -%}
    possibleColors.push('{{color}}');
  {%- endfor -%}

  let colorIdx = 0;
  races.forEach(race => {
    let sum = 0;
    let raceEntries = entries.filter(e => e.id_race === race.id);
    let datasetPerRaceDay = {
        label: race.name,
        data: [],
        fill: false,
        backgroundColor: possibleColors[colorIdx],
        borderColor: possibleColors[colorIdx]
      };
    let datasetSumPerRace = {
        label: race.name,
        data: [],
        fill: false,
        backgroundColor: possibleColors[colorIdx],
        borderColor: possibleColors[colorIdx]
      }

      dayFormatList.forEach(dfl => {
        let currentDayNumber = sortedEntries.filter(e => e.id_race === race.id && moment(e.entered_date, "YYYY-MM-DD").format('YYYY-MM-DD') === dfl).length;

        datasetPerRaceDay.data.push(currentDayNumber);
        sum += currentDayNumber;

        datasetSumPerRace.data.push(sum);
      });


      statsDatasetEnteringPerRaceDay.push(datasetPerRaceDay);
      statsDatasetEnteringSumPerRace.push(datasetSumPerRace);

      colorIdx++;
  });

  const statsDataEnteringPerRaceDay = {
    labels: statsLabelsEntering,
    datasets: statsDatasetEnteringPerRaceDay
  };
  const statsConfigEnteringPerRaceDay = {
    type: 'line',
    data: statsDataEnteringPerRaceDay,
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Přihlašování Závod/den'
        }
      },
      scales: {
        y: {
          beginAtZero: true
        }
      }
    },
  };

  const statsDataEnteringSumPerRace = {
    labels: statsLabelsEntering,
    datasets: statsDatasetEnteringSumPerRace
  };
  const statsConfigEnteringSumPerRace = {
    type: 'line',
    data: statsDataEnteringSumPerRace,
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Přihlašování Závod/den celkový počet'
        }
      },
      scales: {
        y: {
          beginAtZero: true
        }
      }
    },
  };
  const statsEnteringPerRaceDayContext = document.getElementById('statsEnteringPerRaceDay').getContext('2d');
  const statsEnteringPerRaceDayChart = new Chart(statsEnteringPerRaceDayContext, statsConfigEnteringPerRaceDay);

  const statsEnteringSumPerRaceContext = document.getElementById('statsEnteringSumPerRace').getContext('2d');
  const statsEnteringSumPerRace = new Chart(statsEnteringSumPerRaceContext, statsConfigEnteringSumPerRace);


  {%- for race in action.Races -%} {# | filterOnlyStartedRaces -%} #}
    let statsRacingStatePerRace_{{ race.Id }}_Labels = [];
    let statsRacingStatePerRace_{{ race.Id }}_Dataset = [];


    let results_{{ race.Id }} = [];
    {%- for raceResults in action.Results.Races -%}
      {%- if raceResults.Id == race.Id -%}
        {%- for categoryResults in raceResults.Categories -%}
          {%- for result in categoryResults.Competitors -%}
            results_{{ race.Id }}.push({ start: moment('{{ result.Start }}', "YYYY-MM-DD HH:mm:ss"), finish: moment('{{ result.Finish }}', "YYYY-MM-DD HH:mm:ss") });
          {%- endfor -%}
        {%- endfor -%}
      
        let resultsSortedByStart_{{ race.Id }} = results_{{ race.Id }}.sort((a,b) => moment(a.start).format('YYYYMMDDHHmmss') - moment(b.start).format('YYYYMMDDHHmmss'));
    
        let colorIdxRaceStates_{{ race.Id }} = 0;
        let listOfXValues_{{ race.Id }} = [];

        let starts_{{ race.Id }} = results_{{ race.Id }}.sort((a,b) => moment(a.start).format('YYYYMMDDHHmmss') - moment(b.start).format('YYYYMMDDHHmmss'));
        let finishes_{{ race.Id }} = results_{{ race.Id }}.sort((a,b) => moment(b.finish).format('YYYYMMDDHHmmss') - moment(a.finish).format('YYYYMMDDHHmmss'));

        let startTime_{{ race.Id }} = moment('{{ raceResults.Start }}', "YYYY-MM-DD HH:mm:ss");
        if (starts_{{ race.Id }}.length > 0) {
          startTime_{{ race.Id }} = moment(starts_{{ race.Id }}[0].start);
        }

        let endTime_{{ race.Id }} = moment('{{ raceResults.Finish }}', "YYYY-MM-DD HH:mm:ss");
        if (finishes_{{ race.Id }}.length > 0) {
          endTime_{{ race.Id }} = moment(finishes_{{ race.Id }}[0].finish);
        }
        {# resultsSortedByStart_{{ race.Id }}.forEach(race => {
          
          resultsSortedByStart_{{ race.Id }}.forEach(r => {
            if (listOfXValues_{{ race.Id }}.find(e => e === moment(r.start).format('YYYYMMDDHHmmss')) == null)
              listOfXValues_{{ race.Id }}.push(moment(r.start).format('YYYYMMDDHHmmss'));
    
            if (listOfXValues_{{ race.Id }}.find(e => e === moment(r.finish).format('YYYYMMDDHHmmss')) == null)
              listOfXValues_{{ race.Id }}.push(moment(r.finish).format('YYYYMMDDHHmmss'));
          });
        }); #}

        let tm_{{ race.Id }} = startTime_{{ race.Id }};
        while (tm_{{ race.Id }} <= endTime_{{ race.Id }}) {
          listOfXValues_{{ race.Id }}.push(tm_{{ race.Id }}.format("YYYYMMDDHHmmss"));

          tm_{{ race.Id }}.add(15, 'minutes');
        }
    
        resultsSortedByStart_{{ race.Id }}.forEach(r => {
          let dataset = {
            label: '',
            data: [],
            fill: false,
            backgroundColor: possibleColors[colorIdxRaceStates_{{ race.Id }}],
            borderColor: possibleColors[colorIdxRaceStates_{{ race.Id }}],
            cubicInterpolationMode: 'monotone'
          };
    
          let data = [];
    
          listOfXValues_{{ race.Id }}.sort((a, b) => a-b).forEach(x => {
            if (x > moment(r.start).format('YYYYMMDDHHmmss') && x < moment(r.finish).format('YYYYMMDDHHmmss'))
              data.push(1);
    
            else
              data.push(0);
          });
    
          dataset.data = data;
          statsRacingStatePerRace_{{ race.Id }}_Dataset.push(dataset);
          colorIdxRaceStates_{{ race.Id }}++;
          if (colorIdxRaceStates_{{ race.Id }} >= possibleColors.length)
            colorIdxRaceStates_{{ race.Id }} = 0;
        });
    
        listOfXValues_{{ race.Id }}.sort((a, b) => a-b).forEach(x => {
          statsRacingStatePerRace_{{ race.Id }}_Labels.push(moment(x, 'YYYYMMDDHHmmss').format('DD HH:mm'));
        });
        const statsRacingStatePerRace_{{ race.Id }}_Data = {
          labels: statsRacingStatePerRace_{{ race.Id }}_Labels,
          datasets: statsRacingStatePerRace_{{ race.Id }}_Dataset
        };
    
        let statsRacingStatePerRace_{{ race.Id }}_Config = {
          type: 'line',
          data: statsRacingStatePerRace_{{ race.Id }}_Data,
          options: {
            responsive: true,
            plugins: {
              legend: {
                display: false,
                position: 'top',
              },
              title: {
                display: true,
                text: 'Stav závodníků na trati {{ race.Name }}'
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                    callback: function(value, index, ticks) {
                      switch (value) {
                        case 0: return "V cíli / DNS";
                        case 1: return "Na trati";

                        default: return '';
                      }
                    }
                }
              }
            }
          },
        };

        const statsRacingStatePerRace_{{ race.Id }}_Context = document.getElementById('statsRacingStatePerRace_{{ race.Id }}').getContext('2d');
        const statsRacingStatePerRace_{{ race.Id }} = new Chart(statsRacingStatePerRace_{{ race.Id }}_Context, statsRacingStatePerRace_{{ race.Id }}_Config);
      {%- endif -%} {# results.Race == action.Race #}
    {%- endfor -%} {# action.Results.Races #}
  {%- endfor -%} {# action.Races #}
</script>